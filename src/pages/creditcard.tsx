import { useState, useEffect } from "react"
import Head from "next/head"
import { Inter } from "next/font/google"

import InputMask from "react-input-mask"
import { useForm, SubmitHandler, Controller } from "react-hook-form"
import { z } from "zod"
import { zodResolver } from "@hookform/resolvers/zod"

import CardLogo from "../../public/img/creditcard/logo-visa.png"
import Contactless from "../../public/img/creditcard/contactless.png"
import Image from "next/image"
import { Back } from "@/components/Back"

const inter = Inter({
  weight: ["400", "500", "700"],
  subsets: ["latin"],
  variable: "--font-inter",
})

const createCardFormSchema = z.object({
  number: z
    .string()
    .nonempty("O número do cartão é obrigatório")
    .min(19, "O número deve conter 16 dígitos"),
  name: z
    .string()
    .nonempty("O nome é obrigatório")
    .transform((name) => {
      return name
        .trim()
        .split(" ")
        .map((word) => {
          return word[0].toLocaleUpperCase().concat(word.substring(1))
        })
        .join(" ")
    }),
  vality: z.string().nonempty("A validade é obrigatória"),
  cvv: z
    .string()
    .nonempty("O CVV é obrigatório")
    .min(3, "O CVV deve conter 3 dígitos")
    .max(3, "O CVV deve conter 3 dígitos"),
})

type CreateCardFormData = z.infer<typeof createCardFormSchema>

export default function CreditCard() {
  const [data, setData] = useState<CreateCardFormData>()

  const {
    register,
    handleSubmit,
    formState: { errors },
    control,
  } = useForm<CreateCardFormData>({
    resolver: zodResolver(createCardFormSchema),
  })

  function createCard(data: CreateCardFormData) {
    setData(data)
  }

  return (
    <>
      <Head>
        <title>Credit Card</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Back />
      <main
        className={`${inter.variable} font-inter h-screen flex justify-center items-center leading-[130%] bg-[#1f2937] `}
      >
        <div
          id="app"
          className="w-full flex items-center justify-center flex-col gap-12 p-8"
        >
          <section
            id="creditcard"
            className="w-[28rem] h-[17rem] bg-transparent cursor-pointer group perspective"
          >
            <div className="relative preserve-3d group-hover:my-rotate-y-180 duration-1000">
              <div id="front" className="absolute backface-hidden">
                <div className="w-[28rem] h-[17rem] bg-gradient-to-b from-violet-500 to-blue-500 rounded-lg px-8 py-8 flex justify-between flex-col">
                  <div className="text-white flex items-center justify-between">
                    <Image
                      src={CardLogo}
                      alt="Logo visa"
                      className="w-16 h-9"
                    />
                    <Image
                      src={Contactless}
                      alt="Contactless"
                      className="w-6 h-7"
                    />
                  </div>

                  <div className="text-white flex items-center justify-center">
                    <span className="text-white/80 text-xl tracking-widest">
                      {data?.number ? data.number : "**** **** **** ****"}
                    </span>
                  </div>

                  <div className="text-white flex items-center justify-between">
                    <span className="text-white/80 tracking-wide">
                      {data?.name ? data.name : "John Doe"}
                    </span>
                    <span className="text-white/80 tracking-wide">
                      {data?.vality ? data.vality : "mm / aa"}
                    </span>
                  </div>
                </div>
              </div>

              <div
                id="back"
                className="absolute my-rotate-y-180 backface-hidden overflow-hidden"
              >
                <div className="w-[28rem] h-[17rem] bg-gradient-to-b from-violet-500 to-blue-500 rounded-lg flex py-8 justify-between flex-col">
                  <div className="bg-zinc-900 h-16"></div>
                  <div className="mb-8 flex justify-center items-center gap-3 px-12">
                    <div className="bg-zinc-200 h-10 flex-1 rounded p-2 text-right">
                      <span className="text-zinc-500">
                        {data?.cvv ? data.cvv : "***"}
                      </span>
                    </div>
                    <span className="text-white/80 tracking-wide">CVV</span>
                  </div>
                </div>
              </div>
            </div>
          </section>

          <section className="w-[28rem]">
            <form
              onSubmit={handleSubmit(createCard)}
              className="flex flex-col gap-4"
            >
              <div className="input-wrapper">
                <label htmlFor="number" className="text-white">
                  Número do cartão
                </label>
                <InputMask
                  mask="9999 9999 9999 9999"
                  max={19}
                  placeholder="**** **** **** ****"
                  className="w-full mt-1 px-2 py-3 border border-[#374151] bg-[#111827] rounded text-[#f3f4f6] focus:outline-none focus:ring-1 focus:ring-violet-500 focus:border-transparent"
                  {...register("number")}
                />

                {errors.number && (
                  <span className="flex text-xs text-red-500 p-1">
                    {errors.number.message}
                  </span>
                )}
              </div>

              <div className="input-wrapper">
                <label htmlFor="name" className="text-[#e5e7eb] ">
                  Nome do titular
                </label>
                <input
                  id="name"
                  type="text"
                  maxLength={30}
                  placeholder="Nome como está no cartão"
                  className="w-full mt-1 px-2 py-3 border border-[#374151] bg-[#111827] rounded text-[#f3f4f6] focus:outline-none focus:ring-1 focus:ring-violet-500 focus:border-transparent"
                  {...register("name")}
                />
                {errors.name && (
                  <span className="flex text-xs text-red-500 p-1">
                    {errors.name.message}
                  </span>
                )}
              </div>

              <div className="flex gap-4">
                <div className="basis-[80%]">
                  <label htmlFor="validity" className="text-[#e5e7eb] ">
                    Validade
                  </label>
                  <InputMask
                    mask="99 / 99"
                    id="validity"
                    type="text"
                    placeholder="mm/aa"
                    className="w-full mt-1 px-2 py-3 border border-[#374151] bg-[#111827] rounded text-[#f3f4f6] focus:outline-none focus:ring-1 focus:ring-violet-500 focus:border-transparent"
                    {...register("vality")}
                  />
                  {errors.vality && (
                    <span className="flex text-xs text-red-500 p-1">
                      {errors.vality.message}
                    </span>
                  )}
                </div>
                <div>
                  <label htmlFor="cvv" className="text-[#e5e7eb]">
                    CVV
                  </label>
                  <input
                    id="cvv"
                    type="text"
                    maxLength={3}
                    placeholder="***"
                    className="w-full mt-1 px-2 py-3 border border-[#374151] bg-[#111827] rounded text-[#f3f4f6] focus:outline-none focus:ring-1 focus:ring-violet-500 focus:border-transparent"
                    {...register("cvv")}
                  />
                  {errors.cvv && (
                    <span className="flex text-xs text-red-500 p-1">
                      {errors.cvv.message}
                    </span>
                  )}
                </div>
              </div>
              <button
                type="submit"
                className="w-full bg-violet-500 text-white py-3 mt-4 rounded hover:bg-violet-600"
              >
                Salvar
              </button>
            </form>
          </section>
        </div>
      </main>
    </>
  )
}
